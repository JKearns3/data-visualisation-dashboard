---
title: "Independent Project"
subtitle: "What really helps graduates succeed?"
author: "Jennifer Kearns"
student-number: "C21383126"
Programme-Code: "TU856"
format: html
editor: visual
---

# Setup

```{r setup-libraries}
# Function to quietly install and load packages
quiet_library <- function(pkg) {
  suppressMessages(suppressWarnings({
    if (!requireNamespace(pkg, quietly = TRUE)) {
      install.packages(pkg, quiet = TRUE) # Install without messages
    }
    library(pkg, character.only = TRUE) # Load silently
  }))
}

# Install & Load Packages Silently
quiet_library("ggplot2")
quiet_library("plotly")
quiet_library("gapminder") #An excerpt of the data available at Gapminder.org. For each of 142 countries, the package provides values for life expectancy, GDP per capita, and population, every five years, from 1952 to 2007.
quiet_library("tidyverse")
quiet_library("ggstream") #For Stream graphs
quiet_library("fmsb")  # For radar chart
quiet_library("GGally")  # For parallel co-ordinates chart

quiet_library("cowplot") # For organising plots into a grid
quiet_library("patchwork") # For matrix layout
quiet_library("ggcorrplot") # For Correlation Heatmaps 
quiet_library("corrplot") # For correlation matrices
quiet_library("PerformanceAnalytics")# For standardised skewness and kurtosis
quiet_library("Hmisc") # For generating correlation

quiet_library("viridis") # For Violin Plot
quiet_library("hrbrthemes")

```

# Data Preparation

```{r setup-data, include=FALSE}
# Setup path to the data 
mydata <- file.path("C:","Users","jenni", "Documents", 'TUD', 'Year4', 'Sem2', 'VD', 'Project', 'C21383126')

datapath <- file.path(mydata,'education_career_success.csv')
datapath2 <- file.path(mydata, 'degrees-that-pay-back.csv')

# Load it into the dataframes
education <- read.csv(datapath)
degrees <- read.csv(datapath2)

# Only need to keep undergraduate major and percent change columns
degrees <- degrees %>%
  select(Undergraduate.Major, Percent.change.from.Starting.to.Mid.Career.Salary)

# Rename field of study values to match undergraduate major values
education <- education %>%
  mutate(Field_of_Study = recode(Field_of_Study,
      "Arts" = "Art History",
      "Law" = "Political Science",
      "Medicine" = "Nursing",
      "Engineering" = "Mechanical Engineering",
      "Business" = "Business Management",
      "Mathematics" = "Math"
      ))

# Merge datasets - percentage column based on field of study
merged_df <- education %>%
  left_join(degrees, by = c("Field_of_Study" = "Undergraduate.Major"))

# Rename column
merged_df <- merged_df %>%
  rename(Percent_Change = "Percent.change.from.Starting.to.Mid.Career.Salary")

# view(merged_df)

# Check that all were matched
sum(is.na(merged_df$Percent_Change))

# Add new column with predicted mid career salary
merged_df <- merged_df %>%
  mutate(Pred_Mid_Career_Salary = Starting_Salary * (1 + Percent_Change/100))

```

# Data Exploration

## Summary Statistics

```{r}
summary(merged_df)
```

## Histogram: Distribution of Starting Salaries

```{r}
ggplot(merged_df, aes(x = Starting_Salary)) +
  geom_histogram(fill = "blue", bins = 30, alpha = 0.7) +
  labs(title = "Distribution of Starting Salaries", x = "Starting Salary ($)", y = "Count") +
  scale_x_continuous(labels = scales::label_comma())
  
```

-   Most salaries are between 40000-80000

-   Spike at the lower end indicates a group of students in low-paying fields

-   Right skewed - few individual students earn much higher than the majority

## Histogram: Distribution of Predicted Mid-Career Salaries

```{r}
ggplot(merged_df, aes(x = Pred_Mid_Career_Salary)) +
  geom_histogram(fill = "green", bins = 30, alpha = 0.7) +
  labs(title = "Distribution of Predicted Mid Career Salary", x = "Mid Career Salary ($)", y = "Count") +
  scale_x_continuous(labels = scales::label_comma())
```

-   Most salaries are between 70,000-90,000

-   Less spread out than in the starting salaries - suggests that salaries stabilise over time

-   Right skewed - few individual students are predicted to earn much higher than majority

## Boxplot: Starting Salary by Field

```{r}
# Boxplot: Starting Salary by Field
salary_by_field <- ggplot(merged_df, aes(x = Field_of_Study, y = Starting_Salary, fill = Field_of_Study)) +
  geom_boxplot(alpha = 0.7, outlier.color = "red", outlier.shape = 16) +
  labs(title = "Starting Salary by Field", x = "Field", y = "Starting Salary") +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 11, face = "bold"),
    axis.title = element_text(size = 9),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
    legend.position = "none"
  ) +
  scale_y_continuous(labels = scales::label_comma())

salary_by_field
```

-   All similar median starting out salaries

    -   Slightly higher for computer science, maths, engineering

-   Business, computer science, and maths have less variation in salary - more consistency in pay

-   Some outliers in art, mechanical engineering, nursing, and political science with much higher pay than typical salaries

## Boxplot: Predicted Mid-Career Salary by Field

```{r}
# Boxplot: Predicted Mid-Career Salary by Field
mid_salary_by_field <- ggplot(merged_df, aes(x = Field_of_Study, y = Pred_Mid_Career_Salary, fill = Field_of_Study)) +
  geom_boxplot(alpha = 0.7, outlier.color = "red", outlier.shape = 16) +
  labs(title = "Predicted Mid-Career Salary by Field", x = "Field", y = "Mid-Career Salary") +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 11, face = "bold"),
    axis.title = element_text(size = 9),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
    legend.position = "none"
  )
mid_salary_by_field
```

-   More variety across fields

-   Fields that started with higher salaries Comp Sci, Maths still higher

-   Some lower starting fields (Pol Sci) have strong salary growth

-   Spread of salaries increases over time (Pol Sci, Art), some students within the same field earn much more than others

## Heatmap: Job Offers by Internships Completed

```{r}
# Precompute count of each combination
heatmap_data <- merged_df %>%
  count(Internships_Completed, Job_Offers)  # Count occurrences

# Create heatmap
ggplot(heatmap_data, aes(x = Internships_Completed, y = Job_Offers, fill = n)) +
  geom_tile() +  # Create the heatmap
  scale_fill_gradient(low = "blue", high = "red") +  # Adjust color scale
  labs(x = "Internships Completed", y = "Job Offers", fill = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels

```

-   Students who complete more internships tend to receive more job offers

-   Top right (3-4 internships, 4-5 job offers) is brighter red -\> more internships = more employable

-   Students with 0-1 internships generally receive fewer job offers

-   Students without internships receive fewer job offers - shows value of work experience

## Big Idea

What really helps graduates succeed?

-   Salary growth by field - best paid area

-   Career satisfaction by field - most liked area

-   Salary growth impact on career satisfaction - does salary growth make a career more satisfactory

-   What factors influence job offers - internships, gpa, soft skills ...

    -   Or combination of skills - experience vs soft skills

## Explanatory Visualisations

### Stacked Area Chart- Salary Growth by Field

```{r}
# Summarize Salary by stage and field 
salary_summary <- merged_df %>%   select(Field_of_Study, Starting_Salary, Pred_Mid_Career_Salary) %>%   pivot_longer(cols = c(Starting_Salary, Pred_Mid_Career_Salary),                 names_to = "Career_Stage", values_to = "Salary") %>%   group_by(Career_Stage, Field_of_Study) %>%   summarise(Avg_Salary = mean(Salary, na.rm = TRUE), .groups = "drop") %>%   mutate(Career_Stage = recode(Career_Stage,                                 "Starting_Salary" = "Early Career",                                "Pred_Mid_Career_Salary" = "Mid Career"))  # Rename Labels to early and mid career  
# Create the Stacked Area Chart 
salary_area_chart <- ggplot(data = salary_summary,                              aes(x = Career_Stage,                                  y = Avg_Salary,                                  fill = Field_of_Study,                                  group = Field_of_Study,                                  text = paste("<b>Field:</b> ", Field_of_Study,                                               "<br><b>Career Stage:</b> ", Career_Stage,                                              "<br><b>Avg Salary ($):</b> ", scales::comma(Avg_Salary)))) +   geom_area(position = "stack", alpha = 0.8) +     scale_fill_brewer(palette = "Set3") +     scale_y_continuous(labels = scales::comma) +     labs(     title = "Salary Growth % by Field Over Career Stages",     x = "Career Stage",     y = "Average Salary ($)",     fill = "Field of Study"   ) +   theme_minimal()  
# Convert to Interactive Plotly Chart 
ggplotly(salary_area_chart, tooltip = "text")
```

-   all have an increase in salary as career progresses

-   Fields like Computer Science, Business Management, and Mechanical Engineering tend to have a larger increase in salary

-   The salary gap between fields grows over time

    -   similar enough at the start but quite different by the end

### Bubble Chart: Career Satisfaction vs Mid-Career Salary

```{r}

# Aggregate data to count individuals per field of study
bubble_data <- merged_df %>%
  group_by(Field_of_Study) %>%
  summarise(
    avg_satisfaction = mean(Career_Satisfaction, na.rm = TRUE),
    avg_salary = mean(Pred_Mid_Career_Salary, na.rm = TRUE),
    count = n()
  )

# Create Bubble Chart
bubble_chart <- ggplot(bubble_data, aes(x = avg_satisfaction, y = avg_salary, size = count, color = Field_of_Study)) +
  geom_point(alpha = 0.7) +  # Transparency for overlapping points
  scale_size(range = c(3, 15)) +  # Adjust bubble sizes
  labs(title = "Career Satisfaction vs Predicted Mid-Career Salary",
       x = "Average Career Satisfaction", y = "Predicted Mid-Career Salary", 
       size = "Count of People", color = "Field of Study") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  scale_y_continuous(labels = scales::label_comma())

ggplotly(bubble_chart)
```

-   Generally Satisfaction goes up with salary
-   Art, Maths, and Political Science have the most students, top paid, and highest satisfaction - salary has an impact on career satisfaction
-   Nurisng - lowest salary but quite high satisfaction
-   Business Management - well paid but lowest satisfaction
-   Salary is not the best indication of satisfaction

### Divergent bar charts - Job Offers by Internships/GPA

```{r}
# Calculate deviation from average 
internship_diverge <- merged_df %>%
  group_by(Internships_Completed) %>%
  summarise(mean_job_offers = mean(Job_Offers), .groups = "drop") %>%
  mutate(overall_avg = mean(mean_job_offers), deviation = mean_job_offers - overall_avg)

# Divergent bar chart
p_bar_internships <- internship_diverge %>%
  ggplot(aes(x = factor(Internships_Completed),
             y = deviation, 
             fill = deviation,
             text = paste("Internships Completed:", Internships_Completed,
                          "<br>Deviation:", round(deviation, 3)))) +
  geom_col(position = "dodge") +  # Dodge to show bars side by side
  geom_hline(yintercept = 0, color = "black", linetype = "dashed") +  # Add a baseline at 0
  labs(title = "Divergent Bar Chart of Job Offers by Internships Completed",
       x = "Internships Completed",
       y = "Deviation from Average Job Offers",
       fill = "Above Average") +
  theme_bw()

ggplotly(p_bar_internships, tooltip = "text")

```

-   Students with 0 internships receive below-average job offers

-   Job offers increase with the number of internships, 4 internships show the highest deviation above average

-   Internships have a clear and strong positive impact on employability

```{r}
# Calculate deviation from average 
gpa_diverge <- merged_df %>%
  mutate(University_GPA = round(University_GPA, 1)) %>% # Round gpa to make it more readable
  group_by(University_GPA) %>%
  summarise(mean_job_offers = mean(Job_Offers), .groups = "drop") %>%
  mutate(overall_avg = mean(mean_job_offers), deviation = mean_job_offers - overall_avg)

# Divergent bar chart
p_bar_gpa <- gpa_diverge %>%
  ggplot(aes(x = factor(University_GPA), 
             y = deviation, 
             fill = deviation,
             text = paste("University GPA:", University_GPA,
                          "<br>Deviation:", round(deviation,3)))) +
  geom_col(position = "dodge") +  # Dodge to show bars side by side
  geom_hline(yintercept = 0, color = "black", linetype = "dashed") +  # Add a baseline at 0
  labs(title = "Divergent Bar Chart of Job Offers by University GPA",
       x = "University GPA",
       y = "Deviation from Average Job Offers",
       fill = "Above Average") +
  theme_bw()

ggplotly(p_bar_gpa, tooltip = "text")
```

-   Less clear of a relationship

-   Variation in every GPA range

-   No strong trend

-   Internships/Experience are more important -

### Stacked Bar Chart - Job Offers by Internships Completed

```{r}
internship_job_offers <- merged_df %>%
  group_by(Internships_Completed, Job_Offers) %>%
  summarise(Count = n(), .groups = "drop")

# Create Stacked Bar Chart
p_stacked_bar <- ggplot(internship_job_offers, 
                        aes(x = factor(Internships_Completed),
                            y = Count, 
                            fill = factor(Job_Offers),
                            text = paste("Internships Completed:", Internships_Completed,
                                         "<br>Job Offers:", Job_Offers,
                                         "<br>Count:", Count))) +
  geom_bar(stat = "identity", position = "stack", alpha = 0.8) +
  scale_fill_brewer(palette = "Set2") +
  labs(title = "Job Offers by Internship Completed",
       x = "Internships Completed",
       y = "Number of Students",
       fill = "Job Offers") +
  theme_minimal()

# Convert to Interactive Plotly Chart
ggplotly(p_stacked_bar, tooltip = "text")
```

-   More internships completed - more offers

    -   The sections for more offers are bigger than the lower ones

-   Less internships completed - the lower offers section are the biggest

-   not the strongest / only factor to help get job offers

### Grouped Bar Chart - Importance of Different Factors

```{r}
factor_comparison <- merged_df %>%
  select(Networking_Score, Soft_Skills_Score, Projects_Completed, Job_Offers) %>%
  pivot_longer(cols = c(Networking_Score, Soft_Skills_Score, Projects_Completed), 
               names_to = "Factor", values_to = "Value") %>%
  group_by(Factor, Value) %>%
  summarise(Avg_Job_Offers = mean(Job_Offers, na.rm = TRUE), .groups = "drop")

# Create Grouped Bar Chart
p_grouped_bar <- ggplot(factor_comparison, 
                        aes(x = factor(Value), 
                            y = Avg_Job_Offers, 
                            fill = Factor,
                            text = paste("Factor:", Factor,
                                         "<br>Value:", Value,
                                         "<br>Average Job Offers:",round(Avg_Job_Offers,2)))) +
  geom_col(position = "dodge", alpha = 0.8) +
  scale_fill_brewer(palette = "Set2") +
  labs(title = "Comparison of Career Success Factors",
       x = "Value (e.g., Networking Score, Soft Skills Score, Projects)",
       y = "Average Job Offers",
       fill = "Career Success Factor") +
  theme_minimal()

# Convert to Interactive Plotly Chart
ggplotly(p_grouped_bar, tooltip = "text")
```

-   All similar - no obvious trend sticking out

-   No major peaks - pretty much the same job offers for each score

-   Probably a combination of factors that has an effect

```{r include=FALSE}
# Add a new column - Soft skills: networking, soft skills
# Add new column - Experience: projects, and interships
# Column with total score - combined + GPA
merged_df <- merged_df %>%
  mutate(C_Soft_Skills_Score = Networking_Score + Soft_Skills_Score,
         Experience_Score = Projects_Completed + Internships_Completed,
         University_Score = University_GPA + (1001 - University_Ranking), # Higher rank = better
         Total_Score = C_Soft_Skills_Score + Experience_Score + round(University_GPA,1))
```

### Bar Charts of Combinations

```{r}
# Aggregate average job offers for soft skills
aggregated_soft_skills <- merged_df %>%
  group_by(C_Soft_Skills_Score) %>%
  summarise(Avg_Job_Offers = mean(Job_Offers, na.rm = TRUE), .groups = "drop")

# Aggregate average job offers for experience
aggregated_experience <- merged_df %>%
  group_by(Experience_Score) %>%
  summarise(Avg_Job_Offers = mean(Job_Offers, na.rm = TRUE), .groups = "drop")

# Aggregate average job offers for gpa
aggregated_gpa <- merged_df %>%
  mutate(University_GPA = round(University_GPA,1)) %>% # Round to make cleaner to read
  group_by(University_GPA) %>%
  summarise(Avg_Job_Offers = mean(Job_Offers, na.rm = TRUE), .groups = "drop")


```

#### Job Offers by Soft Skills Score

```{r}
p_grouped_ss <- ggplot(aggregated_soft_skills, 
                       aes(x = factor(C_Soft_Skills_Score), 
                           y = Avg_Job_Offers, 
                           fill = factor(C_Soft_Skills_Score),
                           text = paste("Soft Skills Score:", C_Soft_Skills_Score,
                                        "<br>Average Job Offers:", round(Avg_Job_Offers,2)))) +
  geom_col(position = "dodge", alpha = 0.8) +
  scale_fill_viridis_d() +
  labs(title = "Impact of Soft Skills Score on Job Offers",
       x = "Soft Skills Score",
       y = "Average Job Offers",
       fill = "Soft Skills Score") +
  theme_minimal()

ggplotly(p_grouped_ss, tooltip = "text")

```

-   Higher soft skills means generally more job offers - slightly

-   Most Job offers for Score of 8

-   slightly positive effect

#### Job Offers by Experience Score

```{r}
p_grouped_ex <- ggplot(aggregated_experience, 
                       aes(x = factor(Experience_Score), 
                           y = Avg_Job_Offers, 
                           fill = factor(Experience_Score),
                           text = paste("Experience Score:", Experience_Score,
                                        "<br>Average Job Offers:", round(Avg_Job_Offers,2)))) +
  geom_col(position = "dodge", alpha = 0.8) +
  scale_fill_viridis_d() +
  labs(title = "Impact of Experience Score on Job Offers",
       x = "Experience Score",
       y = "Average Job Offers",
       fill = "Experience Score") +
  theme_minimal()

ggplotly(p_grouped_ex, tooltip = "text")

```

-   Job offers go up as Experience score goes up

-   peaks at experience = 5, 8, 10, 13

-   has some slight positive effect

#### Job Offers by University GPA

```{r}
p_grouped_gpa <- ggplot(aggregated_gpa, 
                        aes(x = factor(University_GPA), 
                            y = Avg_Job_Offers, 
                            fill = factor(University_GPA),
                                          text = paste("University GPA:", University_GPA,
                                        "<br>Average Job Offers:", round(Avg_Job_Offers,2)))) +
  geom_col(position = "dodge", alpha = 1) +
  scale_fill_viridis_d() +
  labs(title = "Impact of University GPA on Job Offers",
       x = "University GPA",
       y = "Average Job Offers",
       fill = "University GPA") +
  theme_minimal()

ggplotly(p_grouped_gpa, tooltip = "text")
```

-   Goes up and down

-   consistently high?? After 3.4

-   Pretty high tho before 3.1

### Multi Line Chart - Experience vs Soft Skills

```{r}
# Normalise soft skills score to fit 0-13 range of experience score
merged_df <- merged_df %>%
  mutate(Soft_Skills_Score_Norm = round(C_Soft_Skills_Score * (13 / 20),0))

```

```{r}
# Convert data to long format
trend_data <- merged_df %>%
  select(Experience_Score, Soft_Skills_Score_Norm, Job_Offers) %>%
  pivot_longer(cols = c(Experience_Score, Soft_Skills_Score_Norm), 
               names_to = "Factor", values_to = "Score_Level") %>%
  group_by(Factor, Score_Level) %>%
  summarise(Avg_Job_Offers = mean(Job_Offers, na.rm = TRUE), .groups = "drop")

# Add a row where Soft_Skills_Score_Norm is 0 - so that there is the same number of values for each one
trend_data <- trend_data %>%
  bind_rows(tibble(Factor = "Soft_Skills_Score_Norm", Score_Level = 0, Avg_Job_Offers = 0))

# Create static lines in the background
static_lines <- ggplot(trend_data, 
                       aes(x = Score_Level, 
                           y = Avg_Job_Offers, 
                           color = Factor, 
                           group = Factor)) +
  geom_line(size = 1, alpha = 0.5)  # Lines always visible


# Animated multi-line trend chart
animated_trend <- static_lines + 
  geom_point(aes(frame = Score_Level), size = 2) + # Only need to animate points - lines are always there
  scale_color_manual(values = c("Experience_Score" = "blue", "Soft_Skills_Score_Norm" = "red")) +
  labs(title = "Job Offers by Experience & Soft Skills Score",
       x = "Score Level",
       y = "Average Job Offers",
       color = "Factor") +
  theme_minimal()

# Convert to interactive animation
ggplotly(animated_trend) %>%
  animation_opts(frame = 1000, easing = "linear")
  
```

-   Nearly equal throughout - similar amount of job offers for each score

-   Both low scores - soft skills get slightly more job offers - more important with no experience

-   Both high scores - experience gets slightly more - could be deciding factor

-   Balance of the two is best

## End Thoughts

-   Salaries have significantly different growth across fields

-   Salary growth has some impact on career satisfaction - but not the only factor

-   Individual Factors on their own (Internships, gpa, soft skills...) do not have much of an effect on how many job offers students received

-   Combination of factors was a better indication of job offers

-   Experience seemed a bit more important than Soft Skills or GPA

-   Combination is best
